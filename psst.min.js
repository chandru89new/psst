document.addEventListener("dragover",function(a){a.preventDefault()},!1);document.addEventListener("dragend",function(a){a.preventDefault()},!1);document.addEventListener("drop",function(a){a.preventDefault()},!1);
var psst=function(a,e){return new Promise(function(f,d){if(a){var g=function(a){return new Promise(function(c,k){var b=new FileReader;b.readAsDataURL(a);b.error&&k(b.error);b.onloadend=function(){c(b.result)}})};if(a.dataTransfer){var c=a.dataTransfer.files[0]?a.dataTransfer.files[0].name:null;if(c){var h=["jpg","png","jpeg"];e&&"[object Array]"==Object.prototype.toString.call(e)&&e.forEach(function(a){h.push(a)});c=c.split(".").pop().toLowerCase();0>h.indexOf(c)?d({status:"failure",message:"This filetype is not allowed."}):
(c=a.dataTransfer.files[0].type,0<=c.indexOf("image")?g(a.dataTransfer.files[0]).then(function(a){f({status:"success",time:Date.now(),type:"image",data:a})})["catch"](function(a){console.error(a)}):d({status:"failure",message:"This type of a file can't be processed because it's not an image."}))}else d({status:"failure",message:"For some reason, the dropped file couldn't be handled."})}else if(a.clipboardData){var b=a.clipboardData.items?a.clipboardData.items:!1;b.length?(c=b[1]?b[1].type:b[0].type)?
0<=c.indexOf("image")?(c=b[1]?b[1].getAsFile():b[0].getAsFile(),g(c).then(function(a){f({status:"success",time:Date.now(),type:"image",data:a})})["catch"](function(a){console.error(a)})):f({status:"success",time:Date.now(),type:"text",data:a.clipboardData.getData("text")}):d({status:"failure",message:"Couldn't detect clipboard data."}):d({status:"failure",message:"No data in clipboard."})}}else d({status:"failure",message:"psst(e) received a non-event for 'e'"})})};